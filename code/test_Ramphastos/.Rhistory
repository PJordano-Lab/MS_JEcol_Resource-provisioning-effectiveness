View(ramp)
devtools::install_github("pedroj/effectiveness_pckg")
library(effect.lndscp)
ramp_pj<- read.table("ramp.csv", sep="\t")
glimpse(ramp_pj)
ramp_pj<- read.table("ramp.csv", sep=";")
glimpse(ramp_pj)
ramp_pj<- read.table("ramp.csv", sep=";", dec=".")
glimpse(ramp_pj)
ramp_pj<- read.table("ramp.csv", header=TRUE, sep=";", dec=".", na.strings="NA")
str(ramp_pj)
knitr::opts_chunk$set(echo = TRUE)
View(ramp)
View(ramp_pj)
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
?effect.lndscp
devtools::source_gist("b843fbafa3af8f408972", filename = "mytheme_bw.R")
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
mytheme_bw
source('~/Documents/Working/MSS_Elena_master/code/prueba_ramphastos/mytheme_bw.R', echo=TRUE)
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
effectiveness<- function(q1, q2, group=NA, label= NA, nlines=10,
myxlab= "QtComp", myylab= "QltComp")    {
# q1 is the component to plot on X axis
# q2 is the component to plot on Y axis
# group is a group label
# label is a taxa label
require(devtools)
require(ggplot2)
#
d<-as.data.frame(cbind(q1, q2, group, label))
names(d)
nlines <- nlines+1 # number of isolines wanted
# slope of a straight line linking (left,bottom) to (right,above)
# corners of the graphic
alfa <- max(d$q2)/max(d$q1)
# sequence of (nlines) regular spaced x values for the isoclines
xval <- seq(0, max(d$q1),
length.out=(nlines+1))[2:(nlines+1)]
isoc <- (xval*xval*alfa) # values of the isoclines
vis1<-seq(0, max(d$q1), length.out= 1000)
#
pp<- as.data.frame(vis1) # Build dataset for within loop plot.
for(i in 1:nlines)
{
pp<- cbind(pp, isoc[i]/vis1)
}
# Main plot ------------------------------------------------------------
# mytheme_bw.R
devtools::source_gist("b843fbafa3af8f408972", filename = "mytheme_bw.R")
#
p1<- ggplot(d, aes(x=q1, y=q2)) +
geom_point(shape= group, size=5) +
geom_text(size= 4, label= label, hjust= 0.5, vjust= 1.9) +
mytheme_bw()
# Adding isolines ------------------------------------------------------
labelx<- rep(0.8*max(q1), nlines)
labely<- as.vector(t(pp[800,1:nlines+1]))
for(i in 1:nlines+1){
p1= p1 + geom_line(aes(x, y),
data= data.frame(x= pp$vis1, y= pp[,i]),
col="blue", size = 0.25, alpha= 0.6) +
ylim(0, max(q2)) +
xlab(paste(myxlab)) +
ylab(paste(myylab))
}
p1 + annotate("text", x= labelx, y= labely,
label=paste("QC= ", round(isoc,1)),
size=4, colour="red", hjust=0)
}
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
effectiveness_plot(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
ls()
rm()
ls()
rm(all)
knitr::opts_chunk$set(echo = TRUE)
# Installation.
devtools::install_github("pedroj/effectiveness_pckg")
library(effect.lndscp)
#---------------------------------------------------------------------------
# Read data.
ramp_pj<- read.table("ramp.csv", header=TRUE, sep=";", dec=".", na.strings="NA")
View(ramp_pj)
# mytheme_bw.R
devtools::source_gist("b843fbafa3af8f408972", filename = "mytheme_bw.R")
# attach(ramp) ---- Using attach can be dangerous when running multiple
# data with same variable names.
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component")
myxlab= "No. visits/10h",
ls()
rm(mytheme_bw)
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component (KJG)")
# attach(ramp) ---- Using attach can be dangerous when running multiple
# data with same variable names.
# Now running with the new effectveness_plot function that uses ggrepel to
# avoid clutter of the labels.
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component (KJG)")
View(ramp_pj)
# mytheme_bw.R
#    devtools::source_gist("b843fbafa3af8f408972", filename = "mytheme_bw.R")
# attach(ramp) ---- Using attach can be dangerous when running multiple
# data with same variable names.
effectiveness(ramp_pj$qty, ramp_pj$KJG,
ramp_pj$plant_family,
ramp_pj$plant_visit, 10,
myxlab= "Qty component",
myylab="Qly component (KJG)")
ramp_pj
